#include "../Config.h"
#ifdef USE_SDL_KEYBOARD
#include "SDLKeymap.h"

// definitions for a swiss german keyboard
// -> adapt for your keyboard
const std::map<KeySpec, CodeTriple> keyMap = {
    // unshifted
    {{SDLK_TAB, false, false}, {0x7f, 0x7f, 0x80}},
    {{SDLK_RETURN, false, false}, {0xfe, 0xfd, 0x00}},
    {{SDLK_BACKSPACE, false, false}, {0xfe, 0xfe, 0x00}},
    {{SDLK_SPACE, false, false}, {0x7f, 0xef, 0x00}},
    {{SDLK_3, false, false}, {0xfd, 0xfe, 0x00}},
    {{SDLK_w, false, false}, {0xfd, 0xfd, 0x00}},
    {{SDLK_a, false, false}, {0xfd, 0xfb, 0x00}},
    {{SDLK_4, false, false}, {0xfd, 0xf7, 0x00}},
    {{SDLK_z, false, false}, {0xfd, 0xef, 0x00}},
    {{SDLK_s, false, false}, {0xfd, 0xdf, 0x00}},
    {{SDLK_e, false, false}, {0xfd, 0xbf, 0x00}},
    {{SDLK_5, false, false}, {0xfb, 0xfe, 0x00}},
    {{SDLK_r, false, false}, {0xfb, 0xfd, 0x00}},
    {{SDLK_d, false, false}, {0xfb, 0xfb, 0x00}},
    {{SDLK_6, false, false}, {0xfb, 0xf7, 0x00}},
    {{SDLK_c, false, false}, {0xfb, 0xef, 0x00}},
    {{SDLK_f, false, false}, {0xfb, 0xdf, 0x00}},
    {{SDLK_t, false, false}, {0xfb, 0xbf, 0x00}},
    {{SDLK_x, false, false}, {0xfb, 0x7f, 0x00}},
    {{SDLK_7, false, false}, {0xf7, 0xfe, 0x00}},
    {{SDLK_y, false, false}, {0xf7, 0xfd, 0x00}},
    {{SDLK_g, false, false}, {0xf7, 0xfb, 0x00}},
    {{SDLK_8, false, false}, {0xf7, 0xf7, 0x00}},
    {{SDLK_b, false, false}, {0xf7, 0xef, 0x00}},
    {{SDLK_h, false, false}, {0xf7, 0xdf, 0x00}},
    {{SDLK_u, false, false}, {0xf7, 0xbf, 0x00}},
    {{SDLK_v, false, false}, {0xf7, 0x7f, 0x00}},
    {{SDLK_9, false, false}, {0xef, 0xfe, 0x00}},
    {{SDLK_i, false, false}, {0xef, 0xfd, 0x00}},
    {{SDLK_j, false, false}, {0xef, 0xfb, 0x00}},
    {{SDLK_0, false, false}, {0xef, 0xf7, 0x00}},
    {{SDLK_m, false, false}, {0xef, 0xef, 0x00}},
    {{SDLK_k, false, false}, {0xef, 0xdf, 0x00}},
    {{SDLK_o, false, false}, {0xef, 0xbf, 0x00}},
    {{SDLK_n, false, false}, {0xef, 0x7f, 0x00}},
    {{SDLK_p, false, false}, {0xdf, 0xfd, 0x00}},
    {{SDLK_l, false, false}, {0xdf, 0xfb, 0x00}},
    {{SDLK_MINUS, false, false}, {0xdf, 0xf7, 0x00}},
    {{SDLK_PERIOD, false, false}, {0xdf, 0xef, 0x00}},
    {{SDLK_COMMA, false, false}, {0xdf, 0x7f, 0x00}},
    {{SDLK_1, false, false}, {0x7f, 0xfe, 0x00}},
    {{SDLK_2, false, false}, {0x7f, 0xf7, 0x00}},
    {{SDLK_q, false, false}, {0x7f, 0xbf, 0x00}},
    {{SDLK_DOLLAR, false, false}, {0xfd, 0xf7, 0x01}},
    {{SDLK_LESS, false, false}, {0xdf, 0x7f, 0x01}},
    {{SDLK_RIGHT, false, false}, {0xfe, 0xfb, 0x00}},
    {{SDLK_LEFT, false, false}, {0xfe, 0xfb, 0x01}},
    {{SDLK_DOWN, false, false}, {0xfe, 0x7f, 0x00}},
    {{SDLK_UP, false, false}, {0xfe, 0x7f, 0x01}},
    {{SDLK_F1, false, false}, {0xfe, 0xef, 0x00}},
    {{SDLK_F3, false, false}, {0xfe, 0xdf, 0x00}},
    {{SDLK_F5, false, false}, {0xfe, 0xbf, 0x00}},
    {{SDLK_F7, false, false}, {0xfe, 0xf7, 0x00}},
    // shift C64
    {{SDLK_w, true, false}, {0xfd, 0xfd, 0x01}},
    {{SDLK_a, true, false}, {0xfd, 0xfb, 0x01}},
    {{SDLK_z, true, false}, {0xfd, 0xef, 0x01}},
    {{SDLK_s, true, false}, {0xfd, 0xdf, 0x01}},
    {{SDLK_e, true, false}, {0xfd, 0xbf, 0x01}},
    {{SDLK_r, true, false}, {0xfb, 0xfd, 0x01}},
    {{SDLK_d, true, false}, {0xfb, 0xfb, 0x01}},
    {{SDLK_c, true, false}, {0xfb, 0xef, 0x01}},
    {{SDLK_f, true, false}, {0xfb, 0xdf, 0x01}},
    {{SDLK_t, true, false}, {0xfb, 0xbf, 0x01}},
    {{SDLK_x, true, false}, {0xfb, 0x7f, 0x01}},
    {{SDLK_y, true, false}, {0xf7, 0xfd, 0x01}},
    {{SDLK_g, true, false}, {0xf7, 0xfb, 0x01}},
    {{SDLK_b, true, false}, {0xf7, 0xef, 0x01}},
    {{SDLK_h, true, false}, {0xf7, 0xdf, 0x01}},
    {{SDLK_u, true, false}, {0xf7, 0xbf, 0x01}},
    {{SDLK_v, true, false}, {0xf7, 0x7f, 0x01}},
    {{SDLK_i, true, false}, {0xef, 0xfd, 0x01}},
    {{SDLK_j, true, false}, {0xef, 0xfb, 0x01}},
    {{SDLK_m, true, false}, {0xef, 0xef, 0x01}},
    {{SDLK_k, true, false}, {0xef, 0xdf, 0x01}},
    {{SDLK_o, true, false}, {0xef, 0xbf, 0x01}},
    {{SDLK_n, true, false}, {0xef, 0x7f, 0x01}},
    {{SDLK_p, true, false}, {0xdf, 0xfd, 0x01}},
    {{SDLK_l, true, false}, {0xdf, 0xfb, 0x01}},
    {{SDLK_q, true, false}, {0x7f, 0xbf, 0x01}},
    {{SDLK_2, true, false}, {0x7f, 0xf7, 0x01}},     // quotedbl
    {{SDLK_5, true, false}, {0xfb, 0xfe, 0x01}},     // percent
    {{SDLK_6, true, false}, {0xfb, 0xf7, 0x01}},     // ampersand
    {{SDLK_8, true, false}, {0xf7, 0xf7, 0x01}},     // leftparen
    {{SDLK_9, true, false}, {0xef, 0xfe, 0x01}},     // rightparen
    {{SDLK_LESS, true, false}, {0xdf, 0xef, 0x01}},  // greater
    {{SDLK_QUOTE, true, false}, {0xbf, 0x7f, 0x01}}, // question
    // shift PC
    {{SDLK_1, true, false}, {0xdf, 0xfe, 0x00}},      // plus
    {{SDLK_3, true, false}, {0xbf, 0xfd, 0x00}},      // asterisk
    {{SDLK_7, true, false}, {0xbf, 0x7f, 0x00}},      // slash
    {{SDLK_0, true, false}, {0xbf, 0xdf, 0x00}},      // equals
    {{SDLK_PERIOD, true, false}, {0xdf, 0xdf, 0x00}}, // colon
    {{SDLK_COLON, true, false}, {0xbf, 0xfb, 0x00}},  // semicolon
};
#endif
